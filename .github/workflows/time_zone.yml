name: Build Banner

on:
  #push:
  #  branches:
  #    - main
  workflow_dispatch:
    inputs:
      TIMEZONE:
        description: "Enter the time zone (CEST or CET)"
        required: true
        type: string
        #default: "CEST"
      DATE1:
        description: "Enter the first date (format: DD.MM.YYYY)"
        required: true
        type: string
      DATE2:
        description: "Enter the second date (format: DD.MM.YYYY)"
        required: true
        type: string
      TIME1:
        description: "Enter the first time (format: HH:MM)"
        required: true
        type: string
      TIME2:
        description: "Enter the second time (format: HH:MM)"
        required: true
        type: string

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Set up the latest Python version
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Automatically picks the latest stable Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tzdata
      
      - name: Setting environment variables
        run: |
          echo "TIMEZONE=${{ inputs.TIMEZONE }}" >> $GITHUB_ENV
          echo "DATE1=${{ inputs.DATE1 }}" >> $GITHUB_ENV
          echo "DATE2=${{ inputs.DATE2 }}" >> $GITHUB_ENV
          echo "TIME1=${{ inputs.TIME1 }}" >> $GITHUB_ENV
          echo "TIME2=${{ inputs.TIME2 }}" >> $GITHUB_ENV
      
      - name: Checking whether the file `Time_zone_generation.py` exists
        run: |
          ls -la
          if [ -f "Time_zone_generation.py" ]; then
            echo "✅ The file Time_zone_generation.py was found."
          else
            echo "❌ Time_zone_generation.py file is missing! Check its location in the repository."
            exit 1
          fi

      #- name: Checking the contents of the script before running
      #  run: cat Time_zone_generation.py

      - name: Running the script and redirecting the results to the logs
        run: |
          python Time_zone_generation.py "$TIMEZONE" "$DATE1" "$DATE2" "$TIME1" "$TIME2"